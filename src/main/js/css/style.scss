$cyber: #34ccff;
$cyber_transparent: rgba($cyber, 0.5);
$red: #d65d5f;
$red_transparent: rgba($red, 0.5);
$cyber_padding: 10px;
$grid_color: rgba($cyber, 0.05);
$white_grid: rgba(#FFF, 0.2);
$font: "Share Tech Mono", "Roboto Mono", monospace;

.grid {
    background-size: 20px 20px, 20px 20px, 100px 100px, 100px 100px;
    background-image:
        linear-gradient(to right, $grid_color 1px, transparent 1px),
        linear-gradient(to bottom, $grid_color 1px, transparent 1px),
        linear-gradient(to right, $grid_color 1px, transparent 1px),
        linear-gradient(to bottom, $grid_color 1px, transparent 1px);
}

@mixin text {
    color: $cyber;
    text-shadow: 0 0 10px $cyber;
    text-transform: uppercase;
    font-size: 20px;
    font-family: $font;
}

body {
    @extend .grid;
    @include text;
    background-color: #101010;
    box-sizing: border-box;
    padding: 50px;
    text-align: center;
    display: flex;
    flex-flow: row nowrap;
    align-items: center;
}

*, *:before, *:after {
    box-sizing: inherit;
    transition: all 1s ease;
}

p, small {
    margin: 0;
    text-shadow: 0 0 10px #34ccff;
    font-size: 0.7em;
    letter-spacing: 0.5em;
    opacity: 0.5;
}
small {
    font-size: 0.5em;
    input {
        width: 12em;
    }
}

input {
    background: transparent;
    color: #34ccff;
    border: none;
    letter-spacing: 0.2em;

    &:focus {
        border: none;
    }
}

button {
    @include text;
    background: none;
    opacity: 0.5;
    border: 1px solid $cyber;
    cursor: pointer;
    min-width: 100px;
    font-size: 0.5em;
    padding: 5px 0;

    &::after {
        content: '()';
    }

    &:hover {
        opacity: 1;
        box-shadow: 0 0 5px $cyber;
    }
}

body > div.main-container {
    flex: 2 0 0;
    order: 1;
}
body > aside {
    flex: 1 1 0;
    overflow-x: hidden;

    &.left-container {
        order: 0;
    }
    &.right-container {
        order: 2;
    }
}

#time.text-warning {
    color: $red;
    text-shadow: 0 0 10px $red;
}
input[type=time] {
    @include text;
    font-size: 5em;
    background-color: transparent;
    border: none;
    text-align: center;
    display: block;
    margin: 0 auto;
    width: 100%;
}

.camera-container {
    position: relative;
    width: 640 + $cyber_padding * 2;
    margin: auto;
    display: inline-block;
}
.camera-layer {
    position: absolute;
    top: 10px;
    left: 10px;
    display: none;
}

input.motor[type=range] {
    height: 480px;
    width: 50px;
    margin: 10px;
    &::-moz-range-track {
        background-color: $cyber_transparent;
        opacity: 0.5;
        width: 100%;
    }
    &::-moz-range-thumb {
        background-color: $cyber;
        border: none;
        border-radius: 0;
        opacity: 1;
        box-shadow: 0 0 10px $cyber;
        height: 50px;
        width: 100%;
    }
    &.warning::-moz-range-track {
        background-color: $red_transparent;
    }
    &.warning::-moz-range-thumb {
        background-color: $red;
        box-shadow: 0 0 10px $red;
    }
}

label.motor {
    display: none;
}

.marker-container {
    margin: 30px auto 0;
    width: 50%;

    .marker {
        display: inline-block;
        line-height: 5em;
        margin: 3px 0;
    }
    label {
        width: 100px;
        height: 100px;
        display: inline-block;
        background-color: transparent;
        border: 1px dotted;
        opacity: 0.5;
    }

    input[type=checkbox] {
        display: none;

        &:checked + label {
            background-color: #34ccff;
        }
    }
}

.satellite-feed {
    p {
        margin-bottom: 5px;
    }
    img {
        filter: grayscale(1);
    }
    span {
        position: relative;
        display: inline-block;
        &::after {
            position: absolute;
            top: 0;
            left: 0;
            bottom: 0;
            right: 0;
            content: '';
            background-size: 10px 10px, 10px 10px, 50px 50px, 50px 50px;
            background-image:
                linear-gradient(to right, $white_grid 1px, transparent 1px),
                linear-gradient(to bottom, $white_grid 1px, transparent 1px),
                linear-gradient(to right, $white_grid 1px, transparent 1px),
                linear-gradient(to bottom, $white_grid 1px, transparent 1px);
            height: 98%; // Not sure why there's extra spacing...
        }
    }
    hr {
        background-size: 10px 10px;
        border: 0px;
        margin: 0;
        display: inline-block;
        &.vertical {
            background-image: linear-gradient(to bottom, $white_grid 1px, transparent 1px);
            height: 240px;
            width: 5px;
            &:nth-of-type(even) {
                border-left: 1px solid;
            }
            &:nth-of-type(odd) {
                border-right: 1px solid;
            }
        }
        &.horizontal {
            background-image: linear-gradient(to right, $white_grid 1px, transparent 1px);
            height: 5px;
            width: 320px;
            display: block;
            margin: 0 auto;
            border-top: 1px solid;
        }
    }
}

.c3 {
    line, path {
        stroke: inherit;
    }
}
.c3-gauge-value {
    fill: $cyber;
}
.c3-chart-arcs {
    .c3-chart-arcs-background {
        fill: $cyber_transparent;
    }
    .c3-gauge-value, .c3-chart-arcs-title, .c3-chart-arcs-gauge-min, .c3-chart-arcs-gauge-max,  {
        font-family: $font;
        fill: $cyber_transparent;
    }
}
.c3-axis, .c3-xgrids, .c3-ygrids {
    font-family: $font;
    stroke: $cyber_transparent;
}

.gauge-chart {
    width: 50%;
    display: inline;
}

.container {
    padding: 20px;
    border: 1px solid $cyber_transparent;
    box-shadow: 0 0 5px $cyber_transparent, 0 0 5px $cyber_transparent inset;
}

.cyber-container {
    padding: $cyber_padding;
    background-image:
        linear-gradient($cyber 5%, transparent 5%, transparent 95%, $cyber 95%),
        linear-gradient(90deg, $cyber 5%, transparent 5%, transparent 95%, $cyber 95%),
        linear-gradient($cyber 5%, transparent 5%, transparent 95%, $cyber 95%),
        linear-gradient(90deg, $cyber 5%, transparent 5%, transparent 95%, $cyber 95%),
        linear-gradient(transparent 10%, $cyber 10%, $cyber 90%, transparent 90%),
        linear-gradient(transparent 10%, $cyber 10%, $cyber 90%, transparent 90%);
    background-size:
        3px 100%, 100% 3px, 3px 100%, 100% 3px,
        1px 100%, 1px 100%;
    background-position:
        0 0, 0 0, 100% 100%, 100% 100%,
        0 0, 100% 0;
    background-repeat: no-repeat;
}
